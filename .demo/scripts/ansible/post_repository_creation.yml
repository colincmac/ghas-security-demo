---

- hosts: localhost
  tasks:
    - name: Parse environment vars
      set_fact:
        context: "{{ lookup('env', 'TERRAFORM_PARAMETERS_B64') | b64decode | from_json }}"

        github_template_token: "{{ lookup('env', 'WORKFLOW_GITHUB_TEMPLATE_ORGANIZATION_TOKEN') }}"
        github_demo_token: "{{ lookup('env', 'WORKFLOW_GITHUB_DEMO_ORGANIZATION_TOKEN') }}"

        template_auth_header: "{{ lookup('env', 'WORKFLOW_AUTH_TEMPLATE_ORGANIZATION_HEADER') }}"
        demo_auth_header: "{{ lookup('env', 'WORKFLOW_AUTH_DEMO_ORGANIZATION_HEADER') }}"

    - name: Validate Context
      assert:
        that:
          - context is defined
          - context.github_context is defined

          - context.github_context.target_repository is defined
          - context.github_context.target_repository.owner is defined
          - context.github_context.target_repository.repo is defined

          - github_template_token is defined
          - (github_template_token | length) > 0

          - github_demo_token is defined
          - (github_demo_token | length) > 0

          - template_auth_header is defined
          - (template_auth_header | length) > 0

          - demo_auth_header is defined
          - (demo_auth_header | length) > 0

    - name: Set Repository URLs
      set_fact:
        template_repository_url: https://github.com/{{ context.github_context.template_repository.owner }}/{{ context.github_context.template_repository.repo }}
        target_repository_url: https://github.com/{{ context.github_context.target_repository.owner }}/{{ context.github_context.target_repository.repo }}
        working_directory: template-repo

    - name: Clone template repository
      command:
        cmd: 'git -c "http.extraHeader={{ template_auth_header }}" clone {{ template_repository_url }} {{ working_directory }}'

    - name: Set target repo url
      command:
        cmd: git remote set-url --push origin {{ target_repository_url }}
        chdir: '{{ working_directory }}'

    - name: Fetch the origin repo
      command:
        cmd: git -c "http.extraHeader={{ template_auth_header }}" fetch -p origin
        chdir: '{{ working_directory }}'

    - name: Push repository files
      command:
        cmd: git -c "http.extraHeader={{ demo_auth_header }}" push origin main --force
        chdir: '{{ working_directory }}'

    - name: Enable Push protection rules
      uri:
        url: https://api.github.com/repos/{{ context.github_context.target_repository.owner }}/{{ context.github_context.target_repository.repo }}/branches/main/protection
        method: PUT
        headers:
          Accept: application/vnd.github.v3+json
          Authorization: bearer {{ github_demo_token }}
        body_format: json
        body:
          enforce_admins: false
          required_status_checks:
            strict: false
            contexts: [
              "Container Build - application / build_and_publish_container",
              "CodeQL Code Scanning",
              "CodeQL",
              "Container Vulnerabilty Scan - app"
            ]
          required_pull_request_reviews:
            dismiss_stale_reviews: true
            required_approving_review_count: 1
          restrictions:
            users: []
            teams: []
        status_code: 200
